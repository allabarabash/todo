{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","addItem","text","newItem","console","log","toggleProperty","search","items","length","toLowerCase","indexOf","arr","propName","idx","findIndex","el","oldItem","slice","visibleItems","doneCount","todoCount","blablup","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf0b182a.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\n\r\nexport default AppHeader","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Todo List</h1>\r\n      <h2>{toDo} more to do, {done} done</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from \"./search-panel\";\r\n\r\nexport default SearchPanel","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n  state = {\r\n    term: ''\r\n  }\r\n\r\n  onSearchChange = (e) => {\r\n    const term = e.target.value\r\n    this.setState({ term: term })\r\n    this.props.onSearchChange(term)\r\n  }\r\n  render () {\r\n    return (\r\n        <input type=\"text\"\r\n               className=\"form-control search-input\"\r\n               placeholder=\"type to search\"\r\n               value={this.state.term}\r\n                onChange={this.onSearchChange}/>\r\n    )\r\n  }\r\n\r\n};\r\n","import TodoListItem from \"./todo-list-item\";\r\n\r\nexport default TodoListItem","import React, { Component } from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n    render() {\r\n        const { label, onDeleted,\r\n                onToggleImportant,\r\n                onToggleDone,\r\n                important, done} = this.props;\r\n\r\n        let classNames = 'todo-list-item'\r\n        if (done) {\r\n            classNames += ' done'\r\n        }\r\n\r\n        if (important) {\r\n            classNames += ' important'\r\n        }\r\n\r\n        return (\r\n            <span className={classNames}>\r\n              <span\r\n                  className=\"todo-list-item-label\"\r\n                  onClick={onToggleDone}>\r\n                {label}\r\n              </span>\r\n\r\n              <button type=\"button\"\r\n                      className=\"btn btn-outline-success btn-sm float-right\"\r\n                      onClick={onToggleImportant}>\r\n                <i className=\"fa fa-exclamation\" />\r\n              </button>\r\n\r\n              <button type=\"button\"\r\n                      className=\"btn btn-outline-danger btn-sm float-right\"\r\n                      onClick={onDeleted}>\r\n                <i className=\"fa fa-trash-o\" />\r\n              </button>\r\n             </span>\r\n        );\r\n    }\r\n}\r\n\r\n","import TodoList from \"./todo-list\";\r\n\r\nexport default TodoList","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted,\r\n                    onToggleImportant, onToggleDone }) => {\r\n\r\n  const elements = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem\r\n            {...itemProps }\r\n            onDeleted={() => onDeleted(id)}\r\n            onToggleImportant={() => onToggleImportant(id)}\r\n            onToggleDone={() => onToggleDone(id)}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ul className=\"list-group todo-list\">\r\n      { elements }\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import ItemStatusFilter from \"./item-status-filter\";\r\n\r\nexport default ItemStatusFilter","import React, { Component } from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'}\r\n    ]\r\n\r\n    render() {\r\n\r\n        const { filter, onFilterChange } = this.props\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary'\r\n            return (\r\n                <button type=\"button\"\r\n                        className={`btn ${clazz}`}\r\n                        key={name}\r\n                        onClick={() => onFilterChange(name)}>\r\n                    {label}\r\n                </button>\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import ItemAddForm from \"./item-add-form\";\r\n\r\nexport default ItemAddForm","import React, { Component } from 'react'\r\n\r\nimport './item-add-form.css'\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    }\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.onItemAdded(this.state.label)\r\n        this.setState({\r\n           label: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n                    onSubmit={this.onSubmit}>\r\n                <input type=\"text\"\r\n                       className=\"form-control\"\r\n                       onChange={this.onLabelChange}\r\n                       value={this.state.label}\r\n                       placeholder=\"What needs to be done\" />\r\n                <button\r\n                    className=\"btn btn-outline-secondary\">\r\n                    Add Item\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import App from \"./app\";\r\n\r\nexport default App","import React, { Component } from 'react';\r\n\r\nimport AppHeader from \"../app-header\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport TodoList from \"../todo-list\";\r\nimport ItemStatusFilter from \"../item-status-filter\";\r\nimport ItemAddForm from \"../item-add-form\";\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink cofee'),\r\n            this.createTodoItem('Make Awesome App'),\r\n            this.createTodoItem('Have a lunch'),\r\n            this.createTodoItem('Свободу Навальному'),\r\n            this.createTodoItem('Шо происходит')\r\n        ],\r\n        term: '',\r\n        filter: '' // active, all, done\r\n    }\r\n\r\n    createTodoItem(label)  {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const newArray = todoData.filter( item => item.id !== id )\r\n\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        })\r\n    }\r\n\r\n    addItem = (text) => {\r\n        // generate id\r\n        const newItem = this.createTodoItem(text)\r\n        // add element to the array\r\n        this.setState(({todoData}) => {\r\n            // new state;\r\n            // dont change the state (class variable todoData itself)\r\n            // not return todoData.push(newItem)\r\n            const newArray = [\r\n                ...todoData,\r\n                newItem]\r\n\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        })\r\n    }\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex(el => el.id === id) // lambda function\r\n\r\n        // 1. update object\r\n        const oldItem = arr[idx]\r\n        const newItem = {... oldItem, [propName]: !oldItem[propName]}\r\n\r\n        // 2. construct new array\r\n        return [\r\n            ... arr.slice(0, idx),\r\n            newItem,\r\n            ... arr.slice(idx + 1)\r\n        ]\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        console.log('id passed: ', id)\r\n        this.setState( ({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState( ({todoData}) => {\r\n\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            }\r\n        })\r\n    }\r\n\r\n    search = (items, term) => {\r\n        if (term.length === 0) {\r\n            return items\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1\r\n        })\r\n    }\r\n\r\n    filter(items, filter) {\r\n        switch(filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter(item => !item.done)\r\n            case 'done':\r\n                return items.filter(item => item.done)\r\n            default:\r\n                return items\r\n        }\r\n    }\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({ term })\r\n    }\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({ filter })\r\n    }\r\n\r\n    render () {\r\n\r\n        const { todoData, term, filter } = this.state\r\n\r\n        const visibleItems = this.filter(this.search(todoData, term), filter)\r\n\r\n        const doneCount = todoData\r\n                                .filter(el => el.done === true)\r\n                                .length\r\n        const todoCount = todoData.length - doneCount\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo={todoCount} done={doneCount} />\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel onSearchChange={this.onSearchChange}/>\r\n                    <ItemStatusFilter\r\n                        filter={filter}\r\n                        onFilterChange={this.onFilterChange}/>\r\n                </div>\r\n\r\n                <TodoList\r\n                    todos={visibleItems}\r\n                    onDeleted={ this.deleteItem }\r\n                    onToggleImportant = { this.onToggleImportant}\r\n                    onToggleDone = { this.onToggleDone }/>\r\n\r\n                    <ItemAddForm onItemAdded={ this.addItem }\r\n                                 blablup={3}/>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","import ReactDOM from 'react-dom';\r\nimport App from \"./components/app\";\r\n\r\nReactDOM.render(<App />,\r\n  document.getElementById('root'));"],"sourceRoot":""}